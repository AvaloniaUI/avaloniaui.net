pool:
  vmImage: 'ubuntu-18.04'

steps:
- task: UseDotNet@2
  inputs:
    version: '3.1.x'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: publish
    projects: 'AvaloniaUI.Net.sln'
    arguments: '-c Release -o publish'
    publishWebProjects: true
    modifyOutputPath: false
    zipAfterPublish: false
- task: CopyFiles@2
  inputs:
    displayName: 'Copy output to Artifacts'
    sourceFolder: '$(Build.SourcesDirectory)/publish/'
    contents: '**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  condition: and(succeeded(), eq(variables['System.PullRequest.IsFork'], false))
- task: SSH@0
  inputs:
    displayName: "Prepare Host Directory"
    sshEndpoint: 'production-server'
    runOptions: 'commands'
    failOnStdErr: true
    commands: |
      sudo mkdir -p /home/avaloniaui.net
      sudo mkdir -p /tmp/avaloniaui.net
      sudo chmod 777 /home/avaloniaui.net
      sudo chmod 777 /tmp/avaloniaui.net
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
- task: CopyFilesOverSSH@0
  displayName: 'Upload Artifacts to Host'
  inputs:
    sshEndpoint: 'production-server'
    sourceFolder: $(Build.ArtifactStagingDirectory)
    contents: '**/*'
    targetFolder: '/tmp/avaloniaui.net'
    cleanTargetFolder: true
    overwrite: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
- task: SSH@0
  inputs:
    displayName: 'Start Host App'
    sshEndpoint: 'production-server'
    runOptions: 'commands'
    commands: |
     sudo systemctl stop ava.service > /dev/null 2>&1
     sudo rm -r /home/avaloniaui.net/* > /dev/null 2>&1 || true
     sudo cp -r /tmp/avaloniaui.net/* /home/avaloniaui.net/
     sudo rm -r /tmp/avaloniaui.net/* > /dev/null 2>&1 || true
     sudo chmod 777 /etc/systemd/system/ava.service
     sudo chmod 777 /home/avaloniaui.net/AvaloniaUI.Net
     sudo systemctl daemon-reload
     sudo systemctl enable ava.service 2>&1
     sudo systemctl restart ava.service
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
