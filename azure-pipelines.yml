pool:
  vmImage: 'ubuntu-18.04'

steps:
- task: UseDotNet@2
  inputs:
    version: '3.1.x'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: publish
    projects: 'AvaloniaUI.Net.sln'
    arguments: '-c Release -o publish'
    publishWebProjects: true
    modifyOutputPath: false
    zipAfterPublish: false
- task: CopyFiles@2
  inputs:
    displayName: 'Copy output to Artifacts'
    sourceFolder: '$(Build.SourcesDirectory)/publish/'
    contents: '**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  condition: and(succeeded(), eq(variables['System.PullRequest.IsFork'], false))
- task: CopyFilesOverSSH@0
  displayName: 'Upload Artifacts to Host'
  inputs:
    sshEndpoint: 'production-server'
    sourceFolder: $(Build.ArtifactStagingDirectory)
    contents: '**/*'
    targetFolder: '/tmp/avaloniaui.net'
    cleanTargetFolder: true
    overwrite: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
- task: SSH@0
  inputs:
    displayName: 'Start Host App'
    sshEndpoint: 'production-server'
    runOptions: 'commands'
    commands: '/home/azure/reload.sh'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
